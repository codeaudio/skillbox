# Generated by Django 4.2 on 2023-04-14 02:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Кол-во')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
            ],
            options={
                'verbose_name': 'Корзина',
                'db_table': 'cart',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.CharField(max_length=200, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
            ],
            options={
                'verbose_name': 'Группы товаров',
                'db_table': 'group',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
            ],
            options={
                'verbose_name': 'Заказ',
                'db_table': 'order',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.CharField(max_length=150, unique=True, verbose_name='Артикул')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('amount', models.IntegerField(verbose_name='Кол-во')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Товары',
                'db_table': 'product',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Кол-во')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='products.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_products', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товары в заказе',
                'db_table': 'order_product',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(related_name='order', through='products.OrderProduct', to='products.product', verbose_name='Товары'),
        ),
    ]
